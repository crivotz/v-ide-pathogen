" CHANGE CURSOR FOR TERM
" if exists('$TMUX')
"   if &term =~ '^xterm'
"     autocmd VimEnter * silent !echo -ne '\033Ptmux;\033\033]12;7\007\033\\'
"     let &t_SI = '\<Esc>Ptmux;\<Esc>\<Esc>]12;5\x7\<Esc>\\'
"     let &t_EI = '\<Esc>Ptmux;\<Esc>\<Esc>]12;7\x7\<Esc>\\'
"     autocmd VimLeave * silent !echo -ne '\033Ptmux;\033\033]12;14\007\033\\'
"   end
" end

" =============================================================================
" NERDTREE
" =============================================================================
" let NERDTreeShowBookmarks=1

" =============================================================================
" NERDCOMMENTER
" =============================================================================
" let g:NERDSpaceDelims = 1
" let g:NERDTrimTrailingWhitespace = 1
" let g:NERDCompactSexyComs = 1

" =============================================================================
" CTRLP
" =============================================================================
" let g:ctrlp_custom_ignore = {
      " \ 'dir':  '\v[\/](\.(git|hg|svn)|\_site)$',
      " \ 'file': '\v\.(exe|so|dll|class|png|jpg|jpeg)$',
      " \}
" let g:ctrlp_working_path_mode = 'r'

" function! HLNext (blinktime)
"   highlight RedOnRed ctermfg=red ctermbg=red
"   let [bufnum, lnum, col, off] = getpos('.')
"   let matchlen = strlen(matchstr(strpart(getline('.'),col-1),@/))
"   echo matchlen
"   let ring_pat = (lnum > 1 ? '\%'.(lnum-1).'l\%>'.max([col-4,1]) .'v\%<'.(col+matchlen+3).'v.\|' : '')
"         \ . '\%'.lnum.'l\%>'.max([col-4,1]) .'v\%<'.col.'v.'
"         \ . '\|'
"         \ . '\%'.lnum.'l\%>'.max([col+matchlen-1,1]) .'v\%<'.(col+matchlen+3).'v.'
"         \ . '\|'
"         \ . '\%'.(lnum+1).'l\%>'.max([col-4,1]) .'v\%<'.(col+matchlen+3).'v.'
"   let ring = matchadd('RedOnRed', ring_pat, 101)
"   redraw
"   exec 'sleep ' . float2nr(a:blinktime * 1000) . 'm'
"   call matchdelete(ring)
"   redraw
" endfunction

" nnoremap <silent> n n:call HLNext(0.4)<cr>
" nnoremap <silent> N N:call HLNext(0.4)<cr>
